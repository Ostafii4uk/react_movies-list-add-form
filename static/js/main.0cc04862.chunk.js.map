{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","regex","RegExp","NewMovie","React","memo","onAddMovie","useState","setTitle","setDescription","setImgUrl","setImdbUrl","imdbIdb","setImdbIdb","urlImdbTrueVal","setUrlImdbVal","urlImgTrueVal","setUrlImgVal","urlValidation","url","test","onSubmit","event","preventDefault","type","name","placeholder","value","onChange","target","required","isTrueVal","changeUrlImg","style","color","changeUrlImdb","display","App","moviesFromServer","setMovies","currentMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cc04862.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\n\ninterface Props {\n  onAddMovie: (movie: Movie) => void;\n}\n\nconst regex = new RegExp(\n  '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?',\n);\n\nexport const NewMovie: React.FC<Props> = React.memo(({\n  onAddMovie,\n}) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbIdb, setImdbIdb] = useState('');\n  const [urlImdbTrueVal, setUrlImdbVal] = useState(false);\n  const [urlImgTrueVal, setUrlImgVal] = useState(false);\n\n  const urlValidation = (url: string) => {\n    return regex.test(url);\n  };\n\n  const changeUrlImdb = (value: string) => {\n    const isTrueVal = !value || urlValidation(value);\n\n    if (!isTrueVal) {\n      return;\n    }\n\n    setImdbUrl(value);\n    setUrlImdbVal(isTrueVal);\n  };\n\n  const changeUrlImg = (value: string) => {\n    const isTrueVal = !value || urlValidation(value);\n\n    if (!isTrueVal) {\n      return;\n    }\n\n    setImgUrl(value);\n    setUrlImgVal(isTrueVal);\n  };\n\n  const addNewMovie = () => {\n    onAddMovie({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId: imdbIdb,\n    });\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbIdb('');\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    addNewMovie();\n\n    resetForm();\n  };\n\n  return (\n    <>\n      <h2>\n        Add new movie\n      </h2>\n      <form\n        onSubmit={handleSubmit}\n      >\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={event => setTitle(event.target.value)}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={event => setDescription(event.target.value)}\n        />\n        <input\n          type=\"text\"\n          name=\"Image Url\"\n          placeholder=\"imgUrl\"\n          value={imgUrl}\n          onChange={event => changeUrlImg(event.target.value)}\n          required\n        />\n        {!urlImgTrueVal && (\n          <div\n            style={{\n              color: 'red',\n            }}\n          >\n            Url is not valid\n          </div>\n        )}\n        <input\n          type=\"text\"\n          name=\"Imdb Url\"\n          placeholder=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={event => changeUrlImdb(event.target.value)}\n          required\n        />\n        {!urlImdbTrueVal && (\n          <div\n            style={{\n              color: 'red',\n            }}\n          >\n            Url is not valid\n          </div>\n        )}\n        <input\n          type=\"text\"\n          name=\"Imdb Id\"\n          placeholder=\"imdbId\"\n          value={imdbIdb}\n          onChange={event => setImdbIdb(event.target.value)}\n          required\n        />\n        <button\n          type=\"submit\"\n          style={{\n            display: 'block',\n          }}\n        >\n          Add\n        </button>\n      </form>\n    </>\n  );\n});\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = React.memo(() => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies(currentMovie => [...currentMovie, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAddMovie={addMovie} />\n      </div>\n    </div>\n  );\n});\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}